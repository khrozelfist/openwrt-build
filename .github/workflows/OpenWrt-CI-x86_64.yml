name: OpenWrt-CI-x86_64

on:
  workflow_dispatch:

jobs:
  build_openwrt:
    name: Build OpenWrt firmware
    runs-on: ubuntu-latest
    steps:
#   - name: Test
#     run : |
#       read -p "pause"

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        sudo rm -rf \
          /usr/share/dotnet \
          /usr/local/lib/android \
          /opt/ghc \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
        sudo -E apt-get update
        sudo -E apt-get -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev qemu-img
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Git
      run : |
        git clone https://github.com/openwrt/openwrt.git
        cd openwrt
        TAG=$(git tag | sort | tail -1 | awk -F '-' '{print$1}')
        git tag | grep $TAG$ || TAG=$(git tag | sort | tail -1)
        echo "tag=$TAG" >> $GITHUB_ENV
        echo "date=$(date "+%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Pre-feeds
      working-directory: ./openwrt
      run: |
        git checkout ${{env.tag}}

        # sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' ./feeds.conf.default
        # git clone https://github.com/khrozelfist/3proxy-openwrt ./package/3proxy
        # wget -O $(ls -d ./target/linux/x86/patches-*)/600-bnx2x-warpcore-8727-2g5.patch https://raw.githubusercontent.com/JAMESMTL/snippets/master/bnx2x/patches/bnx2x_warpcore_8727_2_5g_sgmii_txfault.patch

    - name: Update & Install feeds
      working-directory: ./openwrt
      run : |
        git checkout ${{env.tag}}
        # sed -i 's|https://git.openwrt.org/feed/packages.git|https://github.com/openwrt/packages.git|' feeds.conf.default
        # sed -i 's|https://git.openwrt.org/project/luci.git|https://github.com/openwrt/luci.git|' feeds.conf.default
        # sed -i 's|https://git.openwrt.org/feed/routing.git|https://github.com/openwrt/routing.git|' feeds.conf.default
        # sed -i 's|https://git.openwrt.org/feed/telephony.git|https://github.com/openwrt/telephony.git|' feeds.conf.default

        ./scripts/feeds update -a

        rm -rf ./feeds/packages/net/smartdns
        rm -rf ./feeds/luci/applications/luci-app-smartdns
        git clone https://github.com/pymumu/openwrt-smartdns ./feeds/packages/net/smartdns
        git clone https://github.com/pymumu/luci-app-smartdns ./feeds/luci/applications/luci-app-smartdns/

        ./scripts/feeds install -a
        # ./scripts/feeds install -a -f

    - name: Post-feeds
      working-directory: ./openwrt
      run : |
        git checkout ${{env.tag}}

        sed -i '/DEFAULT:=n/d' ./feeds/packages/net/rp-pppoe/Makefile
        # sed -i 's/LOG info "Check/#LOG info "Check/' ./feeds/packages/net/mwan3/files/usr/sbin/mwan3track

        mkdir -p ./files/etc/uci-defaults
        mkdir -p ./files/usr/bin
        gost=$(curl -s https://api.github.com/repos/go-gost/gost/releases/latest | jq -r '.tag_name' | sed 's/^v//')
        curl -Lso /tmp/gost.tar.gz https://github.com/go-gost/gost/releases/download/v${gost}/gost_${gost}_linux_amd64v3.tar.gz
        tar xzf /tmp/gost.tar.gz -C /tmp
        mv /tmp/gost ./files/usr/bin/gost
        echo chmod +x /usr/bin/gost > ./files/etc/uci-defaults/99-gost

    - name: Generate configuration file
      working-directory: ./openwrt
      run : |
        ver=$(echo ${{env.tag}} | cut -c 2-)
        rm -f ./.config*
        curl -Ls https://downloads.openwrt.org/releases/$ver/targets/x86/64/config.buildinfo | grep -e _TARGET_ -e _PACKAGE_ -e _VERSION_ >> ./.config
        sed -i 's/CONFIG_TARGET_MULTI_PROFILE=y/CONFIG_TARGET_MULTI_PROFILE=n/' ./.config
        sed -i 's/CONFIG_TARGET_PER_DEVICE_ROOTFS=y/CONFIG_TARGET_PER_DEVICE_ROOTFS=n/' ./.config
        sed -i 's/CONFIG_TARGET_ALL_PROFILES=y/CONFIG_TARGET_ALL_PROFILES=n/' ./.config

        cat >> ./.config <<EOF
        # CONFIG_VHDX_IMAGES=y
        # CONFIG_GRUB_EFI_IMAGES=y
        # CONFIG_TARGET_IMAGES_GZIP=n
        # CONFIG_TARGET_ROOTFS_EXT4FS=y
        CONFIG_TARGET_ROOTFS_TARGZ=n
        CONFIG_TARGET_ROOTFS_SQUASHFS=n
        CONFIG_TARGET_ROOTFS_PARTSIZE=1024
        # CONFIG_TARGET_KERNEL_PARTSIZE=16
        # CONFIG_TARGET_EXT4_BLOCKSIZE_4K=y
        # CONFIG_TARGET_EXT4_BLOCKSIZE=4096
        EOF

        # cat >> ./.config <<EOF
        # CONFIG_PACKAGE_kmod-kvm-intel=y
        # CONFIG_PACKAGE_kmod-kvm-amd=y
        # CONFIG_PACKAGE_kmod-tun=y
        # CONFIG_PACKAGE_qemu-x86_64-softmmu=y
        # CONFIG_PACKAGE_qemu-bridge-helper=y
        # CONFIG_PACKAGE_qemu-img=y
        # EOF

        cat >> ./.config <<EOF
        CONFIG_PACKAGE_kmod-bnx2x=y
        CONFIG_PACKAGE_kmod-mt7921e=y
        CONFIG_PACKAGE_kmod-tcp-bbr=y
        CONFIG_PACKAGE_kmod-macvlan=y
        CONFIG_PACKAGE_kmod-fs-ext4=y
        CONFIG_PACKAGE_kmod-nft-tproxy=y
        CONFIG_PACKAGE_kmod-nft-netdev=y
        CONFIG_PACKAGE_bnx2x-firmware=y
        CONFIG_PACKAGE_libcap-bin=y
        CONFIG_PACKAGE_wpad-mbedtls=y
        CONFIG_PACKAGE_coreutils=y
        CONFIG_PACKAGE_coreutils-base64=y
        CONFIG_PACKAGE_coreutils-sha1sum=y
        CONFIG_PACKAGE_ca-certificates=y
        CONFIG_PACKAGE_dnsmasq=n
        CONFIG_PACKAGE_dnsmasq-full=y
        CONFIG_PACKAGE_ethtool-full=y
        CONFIG_PACKAGE_ip-full=y
        CONFIG_PACKAGE_nano=y
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_openssh-sftp-server=y
        CONFIG_PACKAGE_irqbalance=y
        CONFIG_PACKAGE_tcpdump=y
        CONFIG_PACKAGE_iperf3=y
        CONFIG_PACKAGE_fdisk=y
        CONFIG_PACKAGE_parted=y
        CONFIG_PACKAGE_losetup=y
        CONFIG_PACKAGE_resize2fs=y
        CONFIG_PACKAGE_lsblk=y
        CONFIG_PACKAGE_blkid=y
        CONFIG_PACKAGE_block-mount=y
        CONFIG_PACKAGE_conntrack=y
        CONFIG_PACKAGE_bind-dig=y
        CONFIG_PACKAGE_drill=y
        CONFIG_PACKAGE_bash=y
        CONFIG_PACKAGE_pciutils=y
        CONFIG_PACKAGE_proxychains-ng=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_hostapd-utils=y
        CONFIG_PACKAGE_uxc=y
        CONFIG_PACKAGE_sudo=y
        CONFIG_PACKAGE_python3-pip=y
        CONFIG_PACKAGE_xxd=y
        CONFIG_PACKAGE_cifsmount=y
        CONFIG_PACKAGE_screen=y
        CONFIG_PACKAGE_collectd-mod-thermal=y
        CONFIG_PACKAGE_collectd-mod-exec=y
        CONFIG_PACKAGE_collectd-mod-conntrack=y
        CONFIG_PACKAGE_collectd-mod-ipstatistics=y
        CONFIG_PACKAGE_collectd-mod-processes=y
        CONFIG_PACKAGE_collectd-mod-tcpconns=y
        CONFIG_PACKAGE_collectd-mod-uptime=y
        CONFIG_PACKAGE_collectd-mod-ping=y
        CONFIG_PACKAGE_collectd-mod-dns=y
        CONFIG_PACKAGE_xray-core=y
        # CONFIG_PACKAGE_podman=y
        # CONFIG_PACKAGE_v2raya=y
        # CONFIG_PACKAGE_sing-box=y
        # CONFIG_PACKAGE_logd=n
        # CONFIG_PACKAGE_syslog-ng=y
        # CONFIG_PACKAGE_rp-pppoe-relay=y
        # CONFIG_PACKAGE_3proxy=y
        CONFIG_PACKAGE_luci-proto-wireguard=y
        CONFIG_PACKAGE_luci-app-wol=y
        CONFIG_PACKAGE_luci-app-ddns=y
        CONFIG_PACKAGE_luci-app-mwan3=y
        CONFIG_PACKAGE_luci-app-samba4=y
        CONFIG_PACKAGE_luci-app-smartdns=y
        CONFIG_PACKAGE_luci-app-vnstat2=y
        CONFIG_PACKAGE_luci-app-statistics=y
        CONFIG_PACKAGE_luci-app-natmap=y
        CONFIG_PACKAGE_luci-app-upnp=y
        # CONFIG_PACKAGE_luci-app-dawn=y
        # CONFIG_PACKAGE_luci-app-nlbwmon=y
        # !! docker may use all space !!
        CONFIG_PACKAGE_luci-app-dockerman=y
        EOF

        make defconfig

    - name: Build firmware
      working-directory: ./openwrt
      run : |
        git checkout ${{env.tag}}
        make -j$(nproc) || make -j1 V=s

    - name: Prepare artifact
      working-directory: ./openwrt
      run : |
        mkdir -p ./artifact/buildinfo
        mkdir -p ./artifact/firmware
        mkdir -p ./artifact/package
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
        # rm -rf $(find ./artifact/firmware/ -type f -name "*.tar.gz")
        rm -rf $(find ./artifact/firmware/ -type f -name "*.bin")
        rm -rf $(find ./artifact/firmware/ -type f -name "*.img*" | grep -v "combined-efi")
        cp -rf $(find ./ -type f -regex '.*\.\(ipk\|apk\)$') ./artifact/package/

    - name: Deliver buildinfo
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_buildinfo_${{env.tag}}_${{env.date}}
        path: ./openwrt/artifact/buildinfo/

    - name: Deliver firmware
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_firmware_${{env.tag}}_${{env.date}}
        path: ./openwrt/artifact/firmware/

    - name: Deliver package
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_package_${{env.tag}}_${{env.date}}
        path: ./openwrt/artifact/package/
